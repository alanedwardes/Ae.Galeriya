<h2>Upload Photos</h2>

<script>
    function readFile(file){
        return new Promise((resolve, reject) => {
            var fr = new FileReader();  
            fr.onload = () => {
                resolve(fr.result )
            };
            fr.onerror = reject;
            fr.readAsArrayBuffer(file);
        });
    }

    function digestToHex(hashBuffer) {
        const hashArray = Array.from(new Uint8Array(hashBuffer));
        return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
    }

    async function directorySelected(fileElement, statusElement) {
        fileElement.disabled = "disabled";

        var processedFiles = 0;
        var fileHashMap = {};
        for (const file of fileElement.files) {
            const contents = await readFile(file);
            const hashBuffer = await crypto.subtle.digest('SHA-256', contents);
            const hash = digestToHex(hashBuffer);
            processedFiles++;
            fileHashMap[hash] = file;
            statusElement.innerText = 'Processed ' + processedFiles + ' of ' + fileElement.files.length + ' files';
        }

        const fileHashes = Object.keys(fileHashMap);

        statusElement.innerText = 'Checking if any of the ' + fileHashes.length + ' unique files have already been uploaded'

        const response = await fetch('/api/v1/hashes:query', {
            method: 'POST',
            credentials: 'same-origin',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(fileHashes)
        });

        const existingHashes = await response.json();

        for (const existingHash of existingHashes) {
            delete fileHashMap[existingHash];
        }

        statusElement.innerText = 'Uploading ' + existingHashes.length + ' new unique files'

        console.log(fileHashes);
    }
</script>

<input type="file" webkitdirectory onchange="directorySelected(this, document.getElementById('status'))" />

<p id="status"></p>